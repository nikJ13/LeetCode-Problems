******QUESTION*********
Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:

The solution set must not contain duplicate triplets.

Example:

Given array nums = [-1, 0, 1, 2, -1, -4],

A solution set is:
[
  [-1, 0, 1],
  [-1, -1, 2]
]
***********************
class Solution:
    def threeSum(self, nums):
        l = []
        nums = sorted(nums)
        for i in range(0,len(nums)-2):
            if i==0 or nums[i]!=nums[i-1]:
                start = i + 1
                end = len(nums)-1
                sum1 = 0 - nums[i]
                while start<end:
                    if nums[start]+nums[end]==sum1:
                        l.append([nums[i],nums[start],nums[end]])
                    if nums[start]+nums[end]<sum1:
                        k = start
                        while nums[start]==nums[k] and start!=end:     #this loop is used to avoid the duplicates that do not satisfy the condition
                            start += 1
                    else:
                        k = end
                        while nums[end]==nums[k] and start!=end:       #this loop is used to avoid the duplicates that do not satisfy the condition
                            end -= 1
        return l
