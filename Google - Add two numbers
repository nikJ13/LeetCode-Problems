############QUESTION######################
You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

 

Example 1:


Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]
 

Constraints:

The number of nodes in each linked list is in the range [1, 100].
0 <= Node.val <= 9
It is guaranteed that the list represents a number that does not have leading zeros.
###################################
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: Optional[ListNode], l2: Optional[ListNode]) -> Optional[ListNode]:
        carry = 0
        ptr1 = l1
        ptr2 = l2
        head = ListNode()
        start = head
        p1 = l1
        p2 = l2
        count1,count2 = 0,0
        while p1:
            count1 += 1
            p1 = p1.next
        while p2:
            count2 += 1
            p2 = p2.next
        if count1>=count2:
            while ptr1!=None:
                if ptr2:
                    head.val = (ptr1.val+ptr2.val+carry)%10  # getting last digit as the sum
                    carry = (ptr1.val+ptr2.val+carry)//10    # getting the carry digit
                    if ptr1.next:
                        head.next = ListNode()
                        head = head.next
                    ptr1 = ptr1.next
                    ptr2 = ptr2.next
                else:
                    head.val = (ptr1.val + carry)%10
                    carry = (ptr1.val+carry)//10
                    if ptr1.next:
                        head.next = ListNode()
                        head = head.next
                    ptr1 = ptr1.next
        else:
            while ptr2!=None:
                if ptr1:
                    head.val = (ptr1.val+ptr2.val+carry)%10
                    carry = (ptr1.val+ptr2.val+carry)//10
                    if ptr2.next:
                        head.next = ListNode()
                        head = head.next
                    ptr1 = ptr1.next
                    ptr2 = ptr2.next
                else:
                    head.val = (ptr2.val + carry)%10
                    carry = (ptr2.val+carry)//10
                    if ptr2.next:
                        head.next = ListNode()
                        head = head.next
                    ptr2 = ptr2.next
        if carry==1:
            head.next = ListNode(1)
        return start
