*****QUESTION*******
Given an array with n objects colored red, white or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white and blue.

Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.

Note: You are not suppose to use the library's sort function for this problem.

Example:

Input: [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
********************
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        for i in range(len(nums)-1):
            for j in range(i+1,len(nums)):
                if nums[i]>nums[j]:
                    t = nums[i]
                    nums[i] = nums[j]
                    nums[j] = t

#############OPTIMIZED WAY TO DO IT##########################
class Solution:
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        dict1 = {-1:-1}
        n = len(nums)
        for i in nums:
            if i not in dict1:
                dict1[i] = 1
            else:
                dict1[i] += 1
        for i in range(n):
            if 0 in dict1 and dict1[0]!=0:
                nums[i] = 0
                dict1[0]-=1
            elif 1 in dict1 and dict1[1]!=0:
                nums[i] = 1
                dict1[1]-= 1
            elif 2 in dict1 and dict1[2]!=0:
                nums[i] = 2
                dict1[2]-=1
                
